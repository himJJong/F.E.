개발 중 팀원의 자료 공유내용 중에서

리액트 상태 관리 라이브러리중 하나인 zustand가 flux 아키텍처 사용하는데요, 사용도 redux에 비해 쉽고 async도 쉽게 적용 가능하고 
provider 적용 필요 없이 바로 쓸 수 있네요.
이거 쓰면 custom hook으로 전역 상태를 공유하는 로직 분리하는게 훨씬 수월해질 것 같아요.

정리하자면...

Recoil → 페이스북 오픈 소스로 지원이 활발하지만 API 버전이 실험 단계, Jotai보다 기능이 방대하고 마찬가지로 Jotai보다 러닝 커브가 살짝 높음, Provider 필요

Jotai → pmndrs에서 개발, Recoil의 철학을 따름, Recoil보다 사용이 조금 쉬움, Provider 필요

Zustand → pmndrs에서 개발, 구조는 Recoil, Jotai보다 Redux, Flux에 가까움, Redux보다 사용이 확실히 쉽고 아키텍처적 장점을 동일하게 보유하고 있음, 
Recoil 혹은 Jotai보다는 조금 더 장황한 사용 코드, Provider 불필요
이 정도 될 것 같습니다.

셋 다 좋은 라이브러리라 엄격하게 뭐가 좋고 나쁘고 까지는 판단할 여지가 없고 맛집몬스터라는 웹앱의 특성이 어느 라이브러리에 어울리는지가 중요할 것 같아요.
==========================================================================================================================

redux - 양방향 데이터 흐름 때문에 복잡성이 생겼으므로 이를 단방향 데이터 흐름으로 만들어낸 아키텍쳐

flux - 

<custom hook>  
- 리액트의 컴포넌트들은 상태에 따라 유동적으로 바뀌고 변화하여야 하는데, 필요한 부분만 상태에 따라 유동적으로 바뀌고 변화 가능하게 하기 위함
- 사용시 use를 앞에 붙인다, 커스텀 훅 또한 uesState와 같은 내장 훅을 사용
왜 사용?
  : 변경, 수정에 효율적, 반복 최소화와 재용성 높이기에 효율적
